From c4074b3c036b41af192b4edf7ff7fde5284d232b Mon Sep 17 00:00:00 2001
From: Ethan Cotterell <ethancotterell@gmail.com>
Date: Fri, 21 May 2021 13:28:58 +0100
Subject: [PATCH 12/14] patches: cmds

---
 ftp/cmds.c | 106 ++++++++++++++++++++++++++---------------------------
 1 file changed, 52 insertions(+), 54 deletions(-)

diff --git a/ftp/cmds.c b/ftp/cmds.c
index 780abc83..30963031 100644
--- a/ftp/cmds.c
+++ b/ftp/cmds.c
@@ -64,7 +64,6 @@
 #include <arpa/ftp.h>
 
 #include <ctype.h>
-#include <error.h>
 #include <errno.h>
 #include <netdb.h>
 #include <signal.h>
@@ -90,10 +89,7 @@
 # include <editline/history.h>
 #endif
 
-#include "ftp_var.h"
-#include "unused-parameter.h"
-#include "xalloc.h"
-#include "xgetcwd.h"
+#include <ftp_var.h>
 
 #ifndef DEFPORT
 # ifdef IPPORT_FTP
@@ -481,7 +477,7 @@ char *stype[] = {
  * Set binary transfer type.
  */
 void
-setbinary (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setbinary (int argc, char **argv)
 {
 
   stype[1] = "binary";
@@ -492,7 +488,7 @@ setbinary (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Set ascii transfer type.
  */
 void
-setascii (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setascii (int argc, char **argv)
 {
 
   stype[1] = "ascii";
@@ -503,7 +499,7 @@ setascii (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Set tenex transfer type.
  */
 void
-settenex (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+settenex (int argc, char **argv)
 {
 
   stype[1] = "tenex";
@@ -514,7 +510,7 @@ settenex (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Set file transfer mode.
  */
 void
-setftmode (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setftmode (int argc, char **argv)
 {
 
   printf ("We only support %s mode, sorry.\n", modename);
@@ -525,7 +521,7 @@ setftmode (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Set file transfer format.
  */
 void
-setform (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setform (int argc, char **argv)
 {
 
   printf ("We only support %s format, sorry.\n", formname);
@@ -536,7 +532,7 @@ setform (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Set file transfer structure.
  */
 void
-setstruct (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setstruct (int argc, char **argv)
 {
 
   printf ("We only support %s structure, sorry.\n", structname);
@@ -737,7 +733,8 @@ mput (int argc, char **argv)
 #endif
       if (glob (argv[i], flags, NULL, &gl) || gl.gl_pathc == 0)
 	{
-	  error (0, 0, "%s: not found", argv[i]);
+	  // error (0, 0, "%s: not found", argv[i]);
+    fprintf(stderr, "%s: not found\n", argv[i]);
 	  globfree (&gl);
 	  continue;
 	}
@@ -852,7 +849,7 @@ getit (int argc, char **argv, int restartit, char *mode)
 	{
 	  if (ret < 0)
 	    {
-	      error (0, errno, "local: %s", local);
+        fprintf(stderr, "local: %s\n", local);
 	      free (local);
 	      return (0);
 	    }
@@ -914,7 +911,7 @@ getit (int argc, char **argv, int restartit, char *mode)
 }
 
 void
-mabort (int signo _GL_UNUSED_PARAMETER)
+mabort (int signo)
 {
   int ointer;
 
@@ -1127,7 +1124,7 @@ onoff (int bool)
  * Show status.
  */
 void
-status (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+status (int argc, char **argv)
 {
   int i;
 
@@ -1192,7 +1189,7 @@ status (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Set beep on cmd completed mode.
  */
 void
-setbell (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setbell (int argc, char **argv)
 {
 
   bell = !bell;
@@ -1204,7 +1201,7 @@ setbell (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Turn on packet tracing.
  */
 void
-settrace (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+settrace (int argc, char **argv)
 {
 
   trace = !trace;
@@ -1223,7 +1220,7 @@ settrace (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Toggle state only in absence of an argument.
  */
 void
-sethash (int argc _GL_UNUSED_PARAMETER, char **argv)
+sethash (int argc, char **argv)
 {
   char *p = argv[1];
 
@@ -1273,7 +1270,7 @@ sethash (int argc _GL_UNUSED_PARAMETER, char **argv)
  * Turn on printing of server echo's.
  */
 void
-setverbose (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setverbose (int argc, char **argv)
 {
 
   verbose = !verbose;
@@ -1285,7 +1282,7 @@ setverbose (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Allow any address family.
  */
 void
-setipany (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setipany (int argc, char **argv)
 {
   usefamily = AF_UNSPEC;
   printf ("Selecting addresses: %s.\n", "any");
@@ -1296,7 +1293,7 @@ setipany (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Restrict to IPv4 addresses.
  */
 void
-setipv4 (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setipv4 (int argc, char **argv)
 {
   usefamily = AF_INET;
   printf ("Selecting addresses: %s.\n", "IPv4");
@@ -1307,7 +1304,7 @@ setipv4 (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Restrict to IPv6 addresses.
  */
 void
-setipv6 (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setipv6 (int argc, char **argv)
 {
   usefamily = AF_INET6;
   printf ("Selecting addresses: %s.\n", "IPv6");
@@ -1318,7 +1315,7 @@ setipv6 (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Toggle use of EPRT/EPRT for IPv4.
  */
 void
-setepsv4 (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setepsv4 (int argc, char **argv)
 {
 
   doepsv4 = !doepsv4;
@@ -1330,7 +1327,7 @@ setepsv4 (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Toggle PORT cmd use before each data connection.
  */
 void
-setport (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setport (int argc, char **argv)
 {
 
   sendport = !sendport;
@@ -1343,7 +1340,7 @@ setport (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * during mget, mput, and mdelete.
  */
 void
-setprompt (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setprompt (int argc, char **argv)
 {
 
   interactive = !interactive;
@@ -1356,7 +1353,7 @@ setprompt (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * on local file names.
  */
 void
-setglob (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setglob (int argc, char **argv)
 {
 
   doglob = !doglob;
@@ -1443,7 +1440,7 @@ lcd (int argc, char **argv)
 
   if (chdir (dir) < 0)
     {
-      error (0, errno, "dir: %s", dir);
+      fprintf(stderr, "dir: %s\n", dir);
       free (dir);
       code = -1;
       return;
@@ -1451,14 +1448,14 @@ lcd (int argc, char **argv)
 
   free (dir);
 
-  dir = xgetcwd ();
+  dir = getcwd (NULL, 0);
   if (dir)
     {
       printf ("Local directory now %s\n", dir);
       free (dir);
-    }
-  else
-    error (0, errno, "getcwd");
+    } else {
+      fprintf(stderr, "getcwd()\n");
+  }
   code = 0;
 }
 
@@ -1659,7 +1656,7 @@ mls (int argc, char **argv)
  * Do a shell escape
  */
 void
-shell (int argc, char **argv _GL_UNUSED_PARAMETER)
+shell (int argc, char **argv)
 {
   pid_t pid;
   sighandler_t old1, old2;
@@ -1698,7 +1695,7 @@ shell (int argc, char **argv _GL_UNUSED_PARAMETER)
 	{
 	  execl (shell, shellnam, (char *) 0);
 	}
-      error (0, errno, "shell");
+      fprintf(stderr, "shell\n");
       code = -1;
       exit (EXIT_FAILURE);
     }
@@ -1709,7 +1706,7 @@ shell (int argc, char **argv _GL_UNUSED_PARAMETER)
   signal (SIGQUIT, old2);
   if (pid == -1)
     {
-      error (0, errno, "Try again later");
+      fprintf(stderr, "Try again later\n");
       code = -1;
     }
   else
@@ -1790,7 +1787,7 @@ user (int argc, char **argv)
  * Print working directory.
  */
 void
-pwd (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+pwd (int argc, char **argv)
 {
   int oldverbose = verbose;
 
@@ -1810,17 +1807,18 @@ pwd (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Print local working directory.
  */
 void
-lpwd (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+lpwd (int argc, char **argv)
 {
-  char *dir = xgetcwd ();
+  char *dir = getcwd (NULL, 0);
 
   if (dir)
     {
       printf ("Local directory is %s\n", dir);
       free (dir);
     }
-  else
-    error (0, errno, "getcwd");
+  else {
+    fprintf(stderr, "getcwd()\n");
+  }
 
   code = 0;
 }
@@ -1982,7 +1980,7 @@ rmthelp (int argc, char **argv)
  * Terminate session and exit.
  */
 void
-quit (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+quit (int argc, char **argv)
 {
 
   if (connected)
@@ -1999,7 +1997,7 @@ quit (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
  * Terminate session, but don't exit.
  */
 void
-disconnect (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+disconnect (int argc, char **argv)
 {
 
   if (!connected)
@@ -2035,8 +2033,8 @@ confirm (char *cmd, char *file)
 void
 fatal (char *msg)
 {
-
-  error (EXIT_FAILURE, 0, "%s", msg);
+  fprintf(stderr, "%s\n", msg);
+  exit(1);
 }
 
 /*
@@ -2062,7 +2060,7 @@ globulize (char *cp)
   memset (&gl, 0, sizeof (gl));
   if (glob (cp, flags, NULL, &gl) || gl.gl_pathc == 0)
     {
-      error (0, 0, "%s: not found", cp);
+      fprintf(stderr, "%s: not found\n", cp);
       globfree (&gl);
       return (0);
     }
@@ -2107,7 +2105,7 @@ account (int argc, char **argv)
 jmp_buf abortprox;
 
 void
-proxabort (int sig _GL_UNUSED_PARAMETER)
+proxabort (int sig)
 {
 
   if (!proxy)
@@ -2190,7 +2188,7 @@ doproxy (int argc, char **argv)
 }
 
 void
-setcase (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setcase (int argc, char **argv)
 {
 
   mcase = !mcase;
@@ -2199,7 +2197,7 @@ setcase (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
 }
 
 void
-setcr (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setcr (int argc, char **argv)
 {
 
   crflag = !crflag;
@@ -2236,7 +2234,7 @@ setntrans (int argc, char **argv)
 char *
 dotrans (char *name)
 {
-  char *new = xmalloc (strlen (name) + 1);
+  char *new = malloc (strlen (name) + 1);
   char *cp1, *cp2 = new;
   size_t i, ostop, found;
 
@@ -2267,7 +2265,7 @@ dotrans (char *name)
 }
 
 void
-setpassive (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setpassive (int argc, char **argv)
 {
 
   passivemode = !passivemode;
@@ -2366,7 +2364,7 @@ domap (char *name)
    * need to be suppressed.
    */
   int buf_len = strlen (mapout) + 1;
-  char *buf = xmalloc (buf_len);
+  char *buf = malloc (buf_len);
   char *cp1 = name, *cp2 = mapin;
   char *tp[9], *te[9];
   int i, toks[9], toknum = 0, match = 1;
@@ -2526,7 +2524,7 @@ domap (char *name)
 }
 
 void
-setsunique (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setsunique (int argc, char **argv)
 {
 
   sunique = !sunique;
@@ -2535,7 +2533,7 @@ setsunique (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
 }
 
 void
-setrunique (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+setrunique (int argc, char **argv)
 {
 
   runique = !runique;
@@ -2545,7 +2543,7 @@ setrunique (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
 
 /* change directory to parent directory */
 void
-cdup (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+cdup (int argc, char **argv)
 {
 
   if (command ("CDUP") == ERROR && code == 500)
@@ -2573,7 +2571,7 @@ restart (int argc, char **argv)
 
 /* show remote system type */
 void
-syst (int argc _GL_UNUSED_PARAMETER, char **argv _GL_UNUSED_PARAMETER)
+syst (int argc, char **argv)
 {
 
   command ("SYST");
-- 
2.25.1

